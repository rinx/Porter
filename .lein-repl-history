(start-figwheel "ios")
(fig-status)
(in-ns 'porter.state)
(swap! app-state "Hello on Clojure in iOS!")
@app-state
(swap! app-state {:app/msg "Hello on Clojure in iOS!"})
(reset-autobuild
)
(swap! app-state assoc :app/msg "Hello on Clojure in iOS!")
(quit)
(start-figwheel "ios")
reset-autobuild)
(reset-autobuild)
quit
(start-figwheel "ios")
(reset-autobuild)
quit
(start-figwheel "ios")
quit
(start-figwheel "ios")
(reset-autobuild)
quit
(start-figwheel "ios")
(require '[tubax.core :as tubax])
(require '[clojure.zip :as zip])
(-> (tubax/xml->clj "<rss><content>abc</content></rss>")
(zip/xml-zip))
(tubax/xml->clj "<rss><content>abc</content></rss>")
(clojure.xml/parse "<rss><content>abc</content></rss>")
(require '[clojure.xml :as xml])
(-> (tubax/xml->clj "<rss><content>abc</content></rss>")
(zip/xml-zip))
(-> (tubax/xml->clj "<rss><content>abc</content></rss>")
(zip/xml-zip))
(-> (tubax/xml->clj "<rss><content>abc</content></rss>")
(zip/xml-zip)
(zip/down
)
(-> (tubax/xml->clj "<rss><content>abc</content></rss>")
(zip/xml-zip)
(zip/down)
(zip/rightmost)
(zip/node)
)
quit
(start-figwheel "ios")
(require '[venia.core :as venia])
(venia/graphql-query {:venia/operation {:operation/type :mutation} :venia/queries [[:createScript {:input {:scriptInput {:title "abc" :body "body"}}}]]})
(venia/graphql-query {:venia/queries
[[:allScript
[:id
:title
:body]]]})
(venia/graphql-query {:venia/queries
[[:createScript
{:input
{:scriptInput
{:title "title"
:body "body"}
}}]
[:script
[:title
:body]]]})
(venia/graphql-query {:venia/queries [[:createScript {:input {:scriptInput {:title "title" :body "body"}}} [:script [:title :body]]]]})
(venia/graphql-query {:venia/queries [[:createScript {:input {:scriptInput {:title "title" :body "body"}}} [:script {:title :body}]]]})
(venia/graphql-query {:venia/queries [[:createScript {:input {:scriptInput {:title "title" :body "body"}}} [:script [:title :body]]]]})
(venia/graphql-query {:venia/queries [[:createScript {:input {:scriptInput {:title "title" :body "body"}}} [[:script [:title :body]]]]]})
(str "mutation" (venia/graphql-query {:venia/queries [[:createScript {:input {:scriptInput {:title "title" :body "body"}}} [[:script [:title :body]]]]]}))
quit
(start-figwheel "ios")
quit
(start-figwheel "ios")
quit
(start-figwheel "ios")
(partial conj [a])
(partial conj [:a])
((partial conj [:a]) :b)
(partial conj [:a] :b)
(reset-autobuild)
quit
(start-figwheel "ios")
(in-ns 'porter.ios.core)
(load 'porter.ios.core)
(fetch-all-script)
(in-ns 'cljs.user)
quit
(start-figwheel "ios")
quit
(start-figwheel "ios")
quit
(start-figwheel "ios")
quit
(start-figwheel "ios")
quit
(start-figwheel "ios")
quit
(start-figwheel "ios")
quit
(start-figwheel "ios")
(fig-status)
(reset-autobuild)
quit
(start-figwheel "ios")
(start-figwheel! "ios")
(start-figwheel "ios")
quit
(start-figwheel "ios")
quit
